{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgagliardi/Desktop/hipaa-validator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Alert, Card, Form, Spinner } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport mammoth from 'mammoth';\nimport fileDownload from 'js-file-download';\n\n// We'll simplify to not use react-pdf for now\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [csvData, setCsvData] = useState(null);\n  const [alert, setAlert] = useState(null);\n  const [handlingMethod, setHandlingMethod] = useState('redact');\n  const [scanResults, setScanResults] = useState(null);\n  const [docText, setDocText] = useState('');\n  const [processing, setProcessing] = useState(false);\n  const [fileType, setFileType] = useState(null);\n  const [processedFileType, setProcessedFileType] = useState(null);\n  const [processedFileData, setProcessedFileData] = useState(null);\n\n  // Handle file drop\n  const onDrop = async acceptedFiles => {\n    try {\n      if (acceptedFiles.length === 0) return;\n      const file = acceptedFiles[0];\n      // Reset states\n      resetStates();\n      setFile(file);\n\n      // Determine file type and set appropriate state\n      const ext = file.name.split('.').pop().toLowerCase();\n      setFileType(ext);\n      await handleFilePreview(file, ext);\n    } catch (error) {\n      console.error('Error handling file:', error);\n      setAlert({\n        type: 'danger',\n        message: 'Error processing the uploaded file.'\n      });\n    }\n  };\n  const resetStates = () => {\n    setFileContent('');\n    setCsvData(null);\n    setAlert(null);\n    setScanResults(null);\n    setDocText('');\n    setProcessedFileData(null);\n    setProcessedFileType(null);\n  };\n  const handleFilePreview = async (file, ext) => {\n    try {\n      if (ext === 'csv') {\n        Papa.parse(file, {\n          complete: result => setCsvData(result.data),\n          header: true,\n          skipEmptyLines: true\n        });\n      } else if (['txt', 'log', 'json'].includes(ext)) {\n        const reader = new FileReader();\n        reader.onload = () => setFileContent(reader.result);\n        reader.readAsText(file);\n      } else if (ext === 'pdf') {\n        // For PDFs, we'll just show a placeholder message\n        setAlert({\n          type: 'info',\n          message: 'PDF file uploaded. PDF content will be processed as text.'\n        });\n      } else if (['doc', 'docx'].includes(ext)) {\n        if (ext === 'docx') {\n          const reader = new FileReader();\n          reader.onload = async event => {\n            try {\n              const result = await mammoth.extractRawText({\n                arrayBuffer: event.target.result\n              });\n              setDocText(result.value);\n            } catch (error) {\n              console.error('Error processing DOCX:', error);\n              setAlert({\n                type: 'warning',\n                message: 'Document preview not available, but scanning will still work.'\n              });\n            }\n          };\n          reader.readAsArrayBuffer(file);\n        } else {\n          // DOC files can't be previewed directly\n          setAlert({\n            type: 'info',\n            message: '.doc files can be processed but not previewed.'\n          });\n        }\n      } else {\n        setAlert({\n          type: 'warning',\n          message: 'This file type is supported for scanning but preview is not available.'\n        });\n      }\n    } catch (error) {\n      console.error('Error previewing file:', error);\n      setAlert({\n        type: 'warning',\n        message: 'Preview not available, but scanning will still work.'\n      });\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'text/plain': ['.txt', '.log'],\n      'application/json': ['.json'],\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\n    },\n    multiple: false\n  });\n  const handleScan = async () => {\n    if (!file) {\n      setAlert({\n        type: 'warning',\n        message: 'Please upload a file first.'\n      });\n      return;\n    }\n    setProcessing(true);\n    setAlert(null);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('handlingMethod', handlingMethod);\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData);\n      if (response.status === 200 && response.data.status === 'success') {\n        setAlert({\n          type: 'success',\n          message: 'File processed successfully!'\n        });\n\n        // Store processed file data and type from response\n        const fileType = response.data.fileType || 'txt';\n        setProcessedFileType(fileType);\n\n        // Decode base64 data\n        const binaryString = atob(response.data.file);\n        const bytes = new Uint8Array(binaryString.length);\n        for (let i = 0; i < binaryString.length; i++) {\n          bytes[i] = binaryString.charCodeAt(i);\n        }\n\n        // Create appropriate blob based on file type\n        let contentType = getMimeType(fileType);\n        const blob = new Blob([bytes], {\n          type: contentType\n        });\n        setProcessedFileData(blob);\n\n        // For all file types, show as text\n        const reader = new FileReader();\n        reader.onload = () => setScanResults(reader.result);\n        reader.readAsText(blob);\n      } else {\n        setAlert({\n          type: 'danger',\n          message: 'Error processing the file'\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading file:', error);\n      setAlert({\n        type: 'danger',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error scanning file. Please check the server connection.'\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const downloadProcessedFile = () => {\n    if (!processedFileData) return;\n    let fileExt = processedFileType || 'txt';\n    const fileName = `processed_${file.name.split('.')[0]}.${fileExt}`;\n    fileDownload(processedFileData, fileName);\n  };\n  const getMimeType = ext => {\n    const mimeTypes = {\n      'pdf': 'application/pdf',\n      'doc': 'application/msword',\n      'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'txt': 'text/plain',\n      'log': 'text/plain',\n      'json': 'application/json',\n      'csv': 'text/csv'\n    };\n    return mimeTypes[ext] || 'text/plain';\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 10,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            as: \"h4\",\n            className: \"text-center bg-primary text-white\",\n            children: \"HIPAA Document Validator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              style: {\n                border: '2px dashed #007bff',\n                padding: '40px',\n                textAlign: 'center',\n                backgroundColor: '#f8f9fa',\n                borderRadius: '8px',\n                marginBottom: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Drag & drop a file here, or click to select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Supported file types: CSV, TXT, LOG, JSON, PDF, DOC, DOCX\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                children: \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), file && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"File selected:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), \" \", file.name, \" (\", (file.size / (1024 * 1024)).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: \"mt-4 mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"PHI Handling Method\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      id: \"redact\",\n                      label: \"Redact - Replace PHI with [REDACTED]\",\n                      value: \"redact\",\n                      checked: handlingMethod === \"redact\",\n                      onChange: e => setHandlingMethod(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      id: \"tokenize\",\n                      label: \"Tokenize - Replace with random tokens\",\n                      value: \"tokenize\",\n                      checked: handlingMethod === \"tokenize\",\n                      onChange: e => setHandlingMethod(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      id: \"remove\",\n                      label: \"Remove - Replace with spaces\",\n                      value: \"remove\",\n                      checked: handlingMethod === \"remove\",\n                      onChange: e => setHandlingMethod(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), alert && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: alert.type,\n              className: \"mt-3\",\n              children: alert.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), fileType && /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mt-4 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                as: \"h5\",\n                children: \"File Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [csvData && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-container\",\n                  style: {\n                    maxHeight: '300px',\n                    overflowY: 'auto'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-bordered table-striped\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: Object.keys(csvData[0] || {}).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: key\n                        }, key, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 77\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: csvData.slice(0, 10).map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: Object.values(row).map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: val\n                        }, j, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 79\n                        }, this))\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), fileContent && /*#__PURE__*/_jsxDEV(\"pre\", {\n                  style: {\n                    background: '#f1f1f1',\n                    padding: '1rem',\n                    borderRadius: '5px',\n                    maxHeight: '300px',\n                    overflowY: 'auto'\n                  },\n                  children: [fileContent.substring(0, 3000), fileContent.length > 3000 && \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), docText && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"doc-preview\",\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    style: {\n                      background: '#f1f1f1',\n                      padding: '1rem',\n                      borderRadius: '5px',\n                      maxHeight: '300px',\n                      overflowY: 'auto'\n                    },\n                    children: [docText.substring(0, 3000), docText.length > 3000 && \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), ['pdf', 'doc'].includes(fileType) && !docText && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"info\",\n                  children: \"Preview not available for this file type, but the document can be processed for PHI detection.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  className: \"w-100\",\n                  onClick: handleScan,\n                  disabled: processing,\n                  children: processing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ms-2\",\n                      children: \"Processing...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : 'Scan for PHI Violations'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), scanResults && /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                as: \"h5\",\n                children: \"Processed Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                  style: {\n                    background: '#f1f1f1',\n                    padding: '1rem',\n                    borderRadius: '5px',\n                    maxHeight: '300px',\n                    overflowY: 'auto'\n                  },\n                  children: [scanResults.substring(0, 3000), scanResults.length > 3000 && \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  onClick: downloadProcessedFile,\n                  disabled: !processedFileData,\n                  children: \"Download Processed Document\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R1y/GD/SIDNHHcDsomO139uSdT0=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","Alert","Card","Form","Spinner","useDropzone","Papa","axios","mammoth","fileDownload","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","fileContent","setFileContent","csvData","setCsvData","alert","setAlert","handlingMethod","setHandlingMethod","scanResults","setScanResults","docText","setDocText","processing","setProcessing","fileType","setFileType","processedFileType","setProcessedFileType","processedFileData","setProcessedFileData","onDrop","acceptedFiles","length","resetStates","ext","name","split","pop","toLowerCase","handleFilePreview","error","console","type","message","parse","complete","result","data","header","skipEmptyLines","includes","reader","FileReader","onload","readAsText","event","extractRawText","arrayBuffer","target","value","readAsArrayBuffer","getRootProps","getInputProps","accept","multiple","handleScan","formData","FormData","append","response","post","status","binaryString","atob","bytes","Uint8Array","i","charCodeAt","contentType","getMimeType","blob","Blob","_error$response","_error$response$data","downloadProcessedFile","fileExt","fileName","mimeTypes","fluid","className","children","md","Header","as","_jsxFileName","lineNumber","columnNumber","Body","style","border","padding","textAlign","backgroundColor","borderRadius","marginBottom","variant","size","toFixed","Group","Label","Check","id","label","checked","onChange","e","maxHeight","overflowY","Object","keys","map","key","slice","row","values","val","j","background","substring","Footer","onClick","disabled","animation","role","_c","$RefreshReg$"],"sources":["/Users/michaelgagliardi/Desktop/hipaa-validator/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Alert, Card, Form, Spinner } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport mammoth from 'mammoth';\nimport fileDownload from 'js-file-download';\n\n// We'll simplify to not use react-pdf for now\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [csvData, setCsvData] = useState(null);\n  const [alert, setAlert] = useState(null);\n  const [handlingMethod, setHandlingMethod] = useState('redact');\n  const [scanResults, setScanResults] = useState(null);\n  const [docText, setDocText] = useState('');\n  const [processing, setProcessing] = useState(false);\n  const [fileType, setFileType] = useState(null);\n  const [processedFileType, setProcessedFileType] = useState(null);\n  const [processedFileData, setProcessedFileData] = useState(null);\n\n  // Handle file drop\n  const onDrop = async (acceptedFiles) => {\n    try {\n      if (acceptedFiles.length === 0) return;\n\n      const file = acceptedFiles[0];\n      // Reset states\n      resetStates();\n      setFile(file);\n\n      // Determine file type and set appropriate state\n      const ext = file.name.split('.').pop().toLowerCase();\n      setFileType(ext);\n\n      await handleFilePreview(file, ext);\n    } catch (error) {\n      console.error('Error handling file:', error);\n      setAlert({ type: 'danger', message: 'Error processing the uploaded file.' });\n    }\n  };\n\n  const resetStates = () => {\n    setFileContent('');\n    setCsvData(null);\n    setAlert(null);\n    setScanResults(null);\n    setDocText('');\n    setProcessedFileData(null);\n    setProcessedFileType(null);\n  };\n\n  const handleFilePreview = async (file, ext) => {\n    try {\n      if (ext === 'csv') {\n        Papa.parse(file, {\n          complete: (result) => setCsvData(result.data),\n          header: true,\n          skipEmptyLines: true,\n        });\n      } else if (['txt', 'log', 'json'].includes(ext)) {\n        const reader = new FileReader();\n        reader.onload = () => setFileContent(reader.result);\n        reader.readAsText(file);\n      } else if (ext === 'pdf') {\n        // For PDFs, we'll just show a placeholder message\n        setAlert({ type: 'info', message: 'PDF file uploaded. PDF content will be processed as text.' });\n      } else if (['doc', 'docx'].includes(ext)) {\n        if (ext === 'docx') {\n          const reader = new FileReader();\n          reader.onload = async (event) => {\n            try {\n              const result = await mammoth.extractRawText({\n                arrayBuffer: event.target.result\n              });\n              setDocText(result.value);\n            } catch (error) {\n              console.error('Error processing DOCX:', error);\n              setAlert({ type: 'warning', message: 'Document preview not available, but scanning will still work.' });\n            }\n          };\n          reader.readAsArrayBuffer(file);\n        } else {\n          // DOC files can't be previewed directly\n          setAlert({ type: 'info', message: '.doc files can be processed but not previewed.' });\n        }\n      } else {\n        setAlert({ type: 'warning', message: 'This file type is supported for scanning but preview is not available.' });\n      }\n    } catch (error) {\n      console.error('Error previewing file:', error);\n      setAlert({ type: 'warning', message: 'Preview not available, but scanning will still work.' });\n    }\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'text/plain': ['.txt', '.log'],\n      'application/json': ['.json'],\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\n    },\n    multiple: false,\n  });\n\n  const handleScan = async () => {\n    if (!file) {\n      setAlert({ type: 'warning', message: 'Please upload a file first.' });\n      return;\n    }\n\n    setProcessing(true);\n    setAlert(null);\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('handlingMethod', handlingMethod);\n\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData);\n\n      if (response.status === 200 && response.data.status === 'success') {\n        setAlert({ type: 'success', message: 'File processed successfully!' });\n\n        // Store processed file data and type from response\n        const fileType = response.data.fileType || 'txt';\n        setProcessedFileType(fileType);\n\n        // Decode base64 data\n        const binaryString = atob(response.data.file);\n        const bytes = new Uint8Array(binaryString.length);\n        for (let i = 0; i < binaryString.length; i++) {\n          bytes[i] = binaryString.charCodeAt(i);\n        }\n\n        // Create appropriate blob based on file type\n        let contentType = getMimeType(fileType);\n        const blob = new Blob([bytes], { type: contentType });\n        setProcessedFileData(blob);\n\n        // For all file types, show as text\n        const reader = new FileReader();\n        reader.onload = () => setScanResults(reader.result);\n        reader.readAsText(blob);\n      } else {\n        setAlert({ type: 'danger', message: 'Error processing the file' });\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setAlert({\n        type: 'danger',\n        message: error.response?.data?.message || 'Error scanning file. Please check the server connection.'\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const downloadProcessedFile = () => {\n    if (!processedFileData) return;\n\n    let fileExt = processedFileType || 'txt';\n    const fileName = `processed_${file.name.split('.')[0]}.${fileExt}`;\n\n    fileDownload(processedFileData, fileName);\n  };\n\n  const getMimeType = (ext) => {\n    const mimeTypes = {\n      'pdf': 'application/pdf',\n      'doc': 'application/msword',\n      'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'txt': 'text/plain',\n      'log': 'text/plain',\n      'json': 'application/json',\n      'csv': 'text/csv'\n    };\n    return mimeTypes[ext] || 'text/plain';\n  };\n\n  return (\n    <Container fluid className=\"p-4\">\n      <Row className=\"justify-content-center\">\n        <Col md={10}>\n          <Card>\n            <Card.Header as=\"h4\" className=\"text-center bg-primary text-white\">HIPAA Document Validator</Card.Header>\n            <Card.Body>\n              <div\n                {...getRootProps()}\n                style={{\n                  border: '2px dashed #007bff',\n                  padding: '40px',\n                  textAlign: 'center',\n                  backgroundColor: '#f8f9fa',\n                  borderRadius: '8px',\n                  marginBottom: '20px'\n                }}\n              >\n                <input {...getInputProps()} />\n                <p><strong>Drag & drop a file here, or click to select</strong></p>\n                <p><small>Supported file types: CSV, TXT, LOG, JSON, PDF, DOC, DOCX</small></p>\n                <Button variant=\"primary\">Upload File</Button>\n              </div>\n\n              {file && (\n                <Alert variant=\"info\">\n                  <strong>File selected:</strong> {file.name} ({(file.size / (1024 * 1024)).toFixed(2)} MB)\n                </Alert>\n              )}\n\n              <Form className=\"mt-4 mb-4\">\n                <Form.Group>\n                  <Form.Label><strong>PHI Handling Method</strong></Form.Label>\n                  <Row>\n                    <Col md={4}>\n                      <Form.Check\n                        type=\"radio\"\n                        id=\"redact\"\n                        label=\"Redact - Replace PHI with [REDACTED]\"\n                        value=\"redact\"\n                        checked={handlingMethod === \"redact\"}\n                        onChange={(e) => setHandlingMethod(e.target.value)}\n                      />\n                    </Col>\n                    <Col md={4}>\n                      <Form.Check\n                        type=\"radio\"\n                        id=\"tokenize\"\n                        label=\"Tokenize - Replace with random tokens\"\n                        value=\"tokenize\"\n                        checked={handlingMethod === \"tokenize\"}\n                        onChange={(e) => setHandlingMethod(e.target.value)}\n                      />\n                    </Col>\n                    <Col md={4}>\n                      <Form.Check\n                        type=\"radio\"\n                        id=\"remove\"\n                        label=\"Remove - Replace with spaces\"\n                        value=\"remove\"\n                        checked={handlingMethod === \"remove\"}\n                        onChange={(e) => setHandlingMethod(e.target.value)}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Group>\n              </Form>\n\n              {alert && (\n                <Alert variant={alert.type} className=\"mt-3\">\n                  {alert.message}\n                </Alert>\n              )}\n\n              {/* File Preview Section */}\n              {fileType && (\n                <Card className=\"mt-4 mb-4\">\n                  <Card.Header as=\"h5\">File Preview</Card.Header>\n                  <Card.Body>\n                    {csvData && (\n                      <div className=\"preview-container\" style={{ maxHeight: '300px', overflowY: 'auto' }}>\n                        <table className=\"table table-bordered table-striped\">\n                          <thead>\n                            <tr>{Object.keys(csvData[0] || {}).map((key) => <th key={key}>{key}</th>)}</tr>\n                          </thead>\n                          <tbody>\n                            {csvData.slice(0, 10).map((row, i) => (\n                              <tr key={i}>{Object.values(row).map((val, j) => <td key={j}>{val}</td>)}</tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    )}\n\n                    {fileContent && (\n                      <pre style={{ background: '#f1f1f1', padding: '1rem', borderRadius: '5px', maxHeight: '300px', overflowY: 'auto' }}>\n                        {fileContent.substring(0, 3000)}\n                        {fileContent.length > 3000 && \"...\"}\n                      </pre>\n                    )}\n\n                    {docText && (\n                      <div className=\"doc-preview\">\n                        <pre style={{ background: '#f1f1f1', padding: '1rem', borderRadius: '5px', maxHeight: '300px', overflowY: 'auto' }}>\n                          {docText.substring(0, 3000)}\n                          {docText.length > 3000 && \"...\"}\n                        </pre>\n                      </div>\n                    )}\n\n                    {['pdf', 'doc'].includes(fileType) && !docText && (\n                      <Alert variant=\"info\">\n                        Preview not available for this file type, but the document can be processed for PHI detection.\n                      </Alert>\n                    )}\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button\n                      variant=\"primary\"\n                      className=\"w-100\"\n                      onClick={handleScan}\n                      disabled={processing}\n                    >\n                      {processing ?\n                        <>\n                          <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                          <span className=\"ms-2\">Processing...</span>\n                        </> :\n                        'Scan for PHI Violations'\n                      }\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              )}\n\n              {/* Results Section */}\n              {scanResults && (\n                <Card className=\"mt-4\">\n                  <Card.Header as=\"h5\">Processed Document</Card.Header>\n                  <Card.Body>\n                    <pre style={{ background: '#f1f1f1', padding: '1rem', borderRadius: '5px', maxHeight: '300px', overflowY: 'auto' }}>\n                      {scanResults.substring(0, 3000)}\n                      {scanResults.length > 3000 && \"...\"}\n                    </pre>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button\n                      variant=\"success\"\n                      onClick={downloadProcessedFile}\n                      disabled={!processedFileData}\n                    >\n                      Download Processed Document\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}