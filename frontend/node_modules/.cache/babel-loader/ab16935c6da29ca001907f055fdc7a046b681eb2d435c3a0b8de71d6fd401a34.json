{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgagliardi/Desktop/hipaa-validator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Alert, Card, Form, Spinner } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport mammoth from 'mammoth';\nimport fileDownload from 'js-file-download';\n\n// Set up PDF.js worker\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [csvData, setCsvData] = useState(null);\n  const [alert, setAlert] = useState(null);\n  const [handlingMethod, setHandlingMethod] = useState('redact');\n  const [scanResults, setScanResults] = useState(null);\n  const [pdfFile, setPdfFile] = useState(null);\n  const [docText, setDocText] = useState('');\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [processing, setProcessing] = useState(false);\n  const [fileType, setFileType] = useState(null);\n  const [processedFileType, setProcessedFileType] = useState(null);\n  const [processedFileData, setProcessedFileData] = useState(null);\n\n  // Handle file drop\n  const onDrop = async acceptedFiles => {\n    try {\n      if (acceptedFiles.length === 0) return;\n      const file = acceptedFiles[0];\n      // Reset states\n      resetStates();\n      setFile(file);\n\n      // Determine file type and set appropriate state\n      const ext = file.name.split('.').pop().toLowerCase();\n      setFileType(ext);\n      await handleFilePreview(file, ext);\n    } catch (error) {\n      console.error('Error handling file:', error);\n      setAlert({\n        type: 'danger',\n        message: 'Error processing the uploaded file.'\n      });\n    }\n  };\n  const resetStates = () => {\n    setFileContent('');\n    setCsvData(null);\n    setAlert(null);\n    setScanResults(null);\n    setPdfFile(null);\n    setDocText('');\n    setNumPages(null);\n    setPageNumber(1);\n    setProcessedFileData(null);\n    setProcessedFileType(null);\n  };\n  const handleFilePreview = async (file, ext) => {\n    try {\n      if (ext === 'csv') {\n        Papa.parse(file, {\n          complete: result => setCsvData(result.data),\n          header: true,\n          skipEmptyLines: true\n        });\n      } else if (['txt', 'log', 'json'].includes(ext)) {\n        const reader = new FileReader();\n        reader.onload = () => setFileContent(reader.result);\n        reader.readAsText(file);\n      } else if (ext === 'pdf') {\n        setPdfFile(URL.createObjectURL(file));\n      } else if (['doc', 'docx'].includes(ext)) {\n        if (ext === 'docx') {\n          const reader = new FileReader();\n          reader.onload = async event => {\n            try {\n              const result = await mammoth.extractRawText({\n                arrayBuffer: event.target.result\n              });\n              setDocText(result.value);\n            } catch (error) {\n              console.error('Error processing DOCX:', error);\n              setAlert({\n                type: 'warning',\n                message: 'Document preview not available, but scanning will still work.'\n              });\n            }\n          };\n          reader.readAsArrayBuffer(file);\n        } else {\n          // DOC files can't be previewed directly\n          setAlert({\n            type: 'info',\n            message: '.doc files can be processed but not previewed.'\n          });\n        }\n      } else {\n        setAlert({\n          type: 'warning',\n          message: 'This file type is supported for scanning but preview is not available.'\n        });\n      }\n    } catch (error) {\n      console.error('Error previewing file:', error);\n      setAlert({\n        type: 'warning',\n        message: 'Preview not available, but scanning will still work.'\n      });\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'text/plain': ['.txt', '.log'],\n      'application/json': ['.json'],\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\n    },\n    multiple: false\n  });\n  const handleScan = async () => {\n    if (!file) {\n      setAlert({\n        type: 'warning',\n        message: 'Please upload a file first.'\n      });\n      return;\n    }\n    setProcessing(true);\n    setAlert(null);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('handlingMethod', handlingMethod);\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData);\n      if (response.status === 200 && response.data.status === 'success') {\n        setAlert({\n          type: 'success',\n          message: 'File processed successfully!'\n        });\n\n        // Store processed file data\n        const fileExt = file.name.split('.').pop().toLowerCase();\n        setProcessedFileType(fileExt);\n\n        // Decode base64 data\n        const binaryString = atob(response.data.file);\n        const bytes = new Uint8Array(binaryString.length);\n        for (let i = 0; i < binaryString.length; i++) {\n          bytes[i] = binaryString.charCodeAt(i);\n        }\n\n        // Create blob based on file type\n        const blob = new Blob([bytes], {\n          type: getMimeType(fileExt)\n        });\n        setProcessedFileData(blob);\n\n        // Preview based on file type\n        handleProcessedFilePreview(blob, fileExt);\n      } else {\n        setAlert({\n          type: 'danger',\n          message: 'Error processing the file'\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading file:', error);\n      setAlert({\n        type: 'danger',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error scanning file. Please check the server connection.'\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const handleProcessedFilePreview = (blob, fileExt) => {\n    if (['txt', 'log', 'json', 'csv'].includes(fileExt)) {\n      // For text-based files, show content\n      const reader = new FileReader();\n      reader.onload = () => setScanResults(reader.result);\n      reader.readAsText(blob);\n    } else if (fileExt === 'pdf') {\n      // For PDFs, create object URL for PDF viewer\n      const url = URL.createObjectURL(blob);\n      setPdfFile(url);\n      setScanResults(null);\n    } else if (['doc', 'docx'].includes(fileExt)) {\n      // For Word documents, just show message that they need to be downloaded\n      setScanResults(null);\n      setAlert(prev => ({\n        ...prev,\n        message: prev.message + ' Please download the processed document to view it.'\n      }));\n    }\n  };\n  const getMimeType = ext => {\n    const mimeTypes = {\n      'pdf': 'application/pdf',\n      'doc': 'application/msword',\n      'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'txt': 'text/plain',\n      'log': 'text/plain',\n      'json': 'application/json',\n      'csv': 'text/csv'\n    };\n    return mimeTypes[ext] || 'application/octet-stream';\n  };\n  const downloadProcessedFile = () => {\n    if (!processedFileData) return;\n    const fileName = `processed_${file.name}`;\n    fileDownload(processedFileData, fileName);\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 10,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            as: \"h4\",\n            className: \"text-center bg-primary text-white\",\n            children: \"HIPAA Document Validator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              style: {\n                border: '2px dashed #007bff',\n                padding: '40px',\n                textAlign: 'center',\n                backgroundColor: '#f8f9fa',\n                borderRadius: '8px',\n                marginBottom: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Drag & drop a file here, or click to select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Supported file types: CSV, TXT, LOG, JSON, PDF, DOC, DOCX\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                children: \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), file && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"File selected:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), \" \", file.name, \" (\", (file.size / (1024 * 1024)).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: \"mt-4 mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"PHI Handling Method\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      id: \"redact\",\n                      label: \"Redact - Replace PHI with [REDACTED]\",\n                      value: \"redact\",\n                      checked: handlingMethod === \"redact\",\n                      onChange: e => setHandlingMethod(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      id: \"tokenize\",\n                      label: \"Tokenize - Replace with random tokens\",\n                      value: \"tokenize\",\n                      checked: handlingMethod === \"tokenize\",\n                      onChange: e => setHandlingMethod(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      id: \"remove\",\n                      label: \"Remove - Replace with spaces\",\n                      value: \"remove\",\n                      checked: handlingMethod === \"remove\",\n                      onChange: e => setHandlingMethod(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), alert && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: alert.type,\n              className: \"mt-3\",\n              children: alert.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), fileType && /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mt-4 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                as: \"h5\",\n                children: \"File Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [csvData && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-container\",\n                  style: {\n                    maxHeight: '300px',\n                    overflowY: 'auto'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-bordered table-striped\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: Object.keys(csvData[0] || {}).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: key\n                        }, key, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 296,\n                          columnNumber: 77\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: csvData.slice(0, 10).map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: Object.values(row).map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: val\n                        }, j, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 79\n                        }, this))\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this), fileContent && /*#__PURE__*/_jsxDEV(\"pre\", {\n                  style: {\n                    background: '#f1f1f1',\n                    padding: '1rem',\n                    borderRadius: '5px',\n                    maxHeight: '300px',\n                    overflowY: 'auto'\n                  },\n                  children: [fileContent.substring(0, 3000), fileContent.length > 3000 && \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this), pdfFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pdf-container\",\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Document, {\n                    file: pdfFile,\n                    onLoadSuccess: onDocumentLoadSuccess,\n                    error: /*#__PURE__*/_jsxDEV(Alert, {\n                      variant: \"danger\",\n                      children: \"Could not load PDF file\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 34\n                    }, this),\n                    loading: /*#__PURE__*/_jsxDEV(Spinner, {\n                      animation: \"border\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 36\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Page, {\n                      pageNumber: pageNumber,\n                      scale: 1.0,\n                      renderTextLayer: false,\n                      renderAnnotationLayer: false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this), numPages && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pdf-controls mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      disabled: pageNumber <= 1,\n                      onClick: () => setPageNumber(pageNumber - 1),\n                      children: \"Previous\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mx-2\",\n                      children: [\"Page \", pageNumber, \" of \", numPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      disabled: pageNumber >= numPages,\n                      onClick: () => setPageNumber(pageNumber + 1),\n                      children: \"Next\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this), docText && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"doc-preview\",\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    style: {\n                      background: '#f1f1f1',\n                      padding: '1rem',\n                      borderRadius: '5px',\n                      maxHeight: '300px',\n                      overflowY: 'auto'\n                    },\n                    children: [docText.substring(0, 3000), docText.length > 3000 && \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this), ['doc'].includes(fileType) && !docText && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"info\",\n                  children: \"Preview not available for .doc files, but the document can be processed for PHI detection.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  block: true,\n                  onClick: handleScan,\n                  disabled: processing,\n                  children: processing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2\",\n                      children: \"Processing...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : 'Scan for PHI Violations'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), (scanResults || processedFileData && processedFileType) && /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                as: \"h5\",\n                children: \"Processed Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [scanResults && /*#__PURE__*/_jsxDEV(\"pre\", {\n                  style: {\n                    background: '#f1f1f1',\n                    padding: '1rem',\n                    borderRadius: '5px',\n                    maxHeight: '300px',\n                    overflowY: 'auto'\n                  },\n                  children: [scanResults.substring(0, 3000), scanResults.length > 3000 && \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this), processedFileData && processedFileType === 'pdf' && !scanResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pdf-container\",\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Document, {\n                    file: pdfFile,\n                    onLoadSuccess: onDocumentLoadSuccess,\n                    error: /*#__PURE__*/_jsxDEV(Alert, {\n                      variant: \"danger\",\n                      children: \"Could not load processed PDF\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 34\n                    }, this),\n                    loading: /*#__PURE__*/_jsxDEV(Spinner, {\n                      animation: \"border\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 36\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Page, {\n                      pageNumber: pageNumber,\n                      scale: 1.0,\n                      renderTextLayer: false,\n                      renderAnnotationLayer: false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 25\n                  }, this), numPages && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pdf-controls mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      disabled: pageNumber <= 1,\n                      onClick: () => setPageNumber(pageNumber - 1),\n                      children: \"Previous\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mx-2\",\n                      children: [\"Page \", pageNumber, \" of \", numPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      disabled: pageNumber >= numPages,\n                      onClick: () => setPageNumber(pageNumber + 1),\n                      children: \"Next\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this), processedFileData && ['doc', 'docx'].includes(processedFileType) && !scanResults && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"info\",\n                  children: \"Word document processing complete. Please download to view.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  onClick: downloadProcessedFile,\n                  disabled: !processedFileData,\n                  children: \"Download Processed Document\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vwixas+mCgGiS3fEfq1Wk88RTT0=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","Alert","Card","Form","Spinner","useDropzone","Papa","axios","Document","Page","pdfjs","mammoth","fileDownload","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","version","App","_s","file","setFile","fileContent","setFileContent","csvData","setCsvData","alert","setAlert","handlingMethod","setHandlingMethod","scanResults","setScanResults","pdfFile","setPdfFile","docText","setDocText","numPages","setNumPages","pageNumber","setPageNumber","processing","setProcessing","fileType","setFileType","processedFileType","setProcessedFileType","processedFileData","setProcessedFileData","onDrop","acceptedFiles","length","resetStates","ext","name","split","pop","toLowerCase","handleFilePreview","error","console","type","message","parse","complete","result","data","header","skipEmptyLines","includes","reader","FileReader","onload","readAsText","URL","createObjectURL","event","extractRawText","arrayBuffer","target","value","readAsArrayBuffer","getRootProps","getInputProps","accept","multiple","handleScan","formData","FormData","append","response","post","status","fileExt","binaryString","atob","bytes","Uint8Array","i","charCodeAt","blob","Blob","getMimeType","handleProcessedFilePreview","_error$response","_error$response$data","url","prev","mimeTypes","downloadProcessedFile","fileName","onDocumentLoadSuccess","fluid","className","children","md","Header","as","_jsxFileName","lineNumber","columnNumber","Body","style","border","padding","textAlign","backgroundColor","borderRadius","marginBottom","variant","size","toFixed","Group","Label","Check","id","label","checked","onChange","e","maxHeight","overflowY","Object","keys","map","key","slice","row","values","val","j","background","substring","onLoadSuccess","loading","animation","scale","renderTextLayer","renderAnnotationLayer","disabled","onClick","Footer","block","role","_c","$RefreshReg$"],"sources":["/Users/michaelgagliardi/Desktop/hipaa-validator/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Alert, Card, Form, Spinner } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport mammoth from 'mammoth';\nimport fileDownload from 'js-file-download';\n\n// Set up PDF.js worker\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [csvData, setCsvData] = useState(null);\n  const [alert, setAlert] = useState(null);\n  const [handlingMethod, setHandlingMethod] = useState('redact');\n  const [scanResults, setScanResults] = useState(null);\n  const [pdfFile, setPdfFile] = useState(null);\n  const [docText, setDocText] = useState('');\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [processing, setProcessing] = useState(false);\n  const [fileType, setFileType] = useState(null);\n  const [processedFileType, setProcessedFileType] = useState(null);\n  const [processedFileData, setProcessedFileData] = useState(null);\n\n  // Handle file drop\n  const onDrop = async (acceptedFiles) => {\n    try {\n      if (acceptedFiles.length === 0) return;\n\n      const file = acceptedFiles[0];\n      // Reset states\n      resetStates();\n      setFile(file);\n\n      // Determine file type and set appropriate state\n      const ext = file.name.split('.').pop().toLowerCase();\n      setFileType(ext);\n\n      await handleFilePreview(file, ext);\n    } catch (error) {\n      console.error('Error handling file:', error);\n      setAlert({ type: 'danger', message: 'Error processing the uploaded file.' });\n    }\n  };\n\n  const resetStates = () => {\n    setFileContent('');\n    setCsvData(null);\n    setAlert(null);\n    setScanResults(null);\n    setPdfFile(null);\n    setDocText('');\n    setNumPages(null);\n    setPageNumber(1);\n    setProcessedFileData(null);\n    setProcessedFileType(null);\n  };\n\n  const handleFilePreview = async (file, ext) => {\n    try {\n      if (ext === 'csv') {\n        Papa.parse(file, {\n          complete: (result) => setCsvData(result.data),\n          header: true,\n          skipEmptyLines: true,\n        });\n      } else if (['txt', 'log', 'json'].includes(ext)) {\n        const reader = new FileReader();\n        reader.onload = () => setFileContent(reader.result);\n        reader.readAsText(file);\n      } else if (ext === 'pdf') {\n        setPdfFile(URL.createObjectURL(file));\n      } else if (['doc', 'docx'].includes(ext)) {\n        if (ext === 'docx') {\n          const reader = new FileReader();\n          reader.onload = async (event) => {\n            try {\n              const result = await mammoth.extractRawText({\n                arrayBuffer: event.target.result\n              });\n              setDocText(result.value);\n            } catch (error) {\n              console.error('Error processing DOCX:', error);\n              setAlert({ type: 'warning', message: 'Document preview not available, but scanning will still work.' });\n            }\n          };\n          reader.readAsArrayBuffer(file);\n        } else {\n          // DOC files can't be previewed directly\n          setAlert({ type: 'info', message: '.doc files can be processed but not previewed.' });\n        }\n      } else {\n        setAlert({ type: 'warning', message: 'This file type is supported for scanning but preview is not available.' });\n      }\n    } catch (error) {\n      console.error('Error previewing file:', error);\n      setAlert({ type: 'warning', message: 'Preview not available, but scanning will still work.' });\n    }\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'text/plain': ['.txt', '.log'],\n      'application/json': ['.json'],\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\n    },\n    multiple: false,\n  });\n\n  const handleScan = async () => {\n    if (!file) {\n      setAlert({ type: 'warning', message: 'Please upload a file first.' });\n      return;\n    }\n\n    setProcessing(true);\n    setAlert(null);\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('handlingMethod', handlingMethod);\n\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData);\n\n      if (response.status === 200 && response.data.status === 'success') {\n        setAlert({ type: 'success', message: 'File processed successfully!' });\n\n        // Store processed file data\n        const fileExt = file.name.split('.').pop().toLowerCase();\n        setProcessedFileType(fileExt);\n\n        // Decode base64 data\n        const binaryString = atob(response.data.file);\n        const bytes = new Uint8Array(binaryString.length);\n        for (let i = 0; i < binaryString.length; i++) {\n          bytes[i] = binaryString.charCodeAt(i);\n        }\n\n        // Create blob based on file type\n        const blob = new Blob([bytes], { type: getMimeType(fileExt) });\n        setProcessedFileData(blob);\n\n        // Preview based on file type\n        handleProcessedFilePreview(blob, fileExt);\n      } else {\n        setAlert({ type: 'danger', message: 'Error processing the file' });\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setAlert({\n        type: 'danger',\n        message: error.response?.data?.message || 'Error scanning file. Please check the server connection.'\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const handleProcessedFilePreview = (blob, fileExt) => {\n    if (['txt', 'log', 'json', 'csv'].includes(fileExt)) {\n      // For text-based files, show content\n      const reader = new FileReader();\n      reader.onload = () => setScanResults(reader.result);\n      reader.readAsText(blob);\n    } else if (fileExt === 'pdf') {\n      // For PDFs, create object URL for PDF viewer\n      const url = URL.createObjectURL(blob);\n      setPdfFile(url);\n      setScanResults(null);\n    } else if (['doc', 'docx'].includes(fileExt)) {\n      // For Word documents, just show message that they need to be downloaded\n      setScanResults(null);\n      setAlert(prev => ({\n        ...prev,\n        message: prev.message + ' Please download the processed document to view it.'\n      }));\n    }\n  };\n\n  const getMimeType = (ext) => {\n    const mimeTypes = {\n      'pdf': 'application/pdf',\n      'doc': 'application/msword',\n      'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'txt': 'text/plain',\n      'log': 'text/plain',\n      'json': 'application/json',\n      'csv': 'text/csv'\n    };\n    return mimeTypes[ext] || 'application/octet-stream';\n  };\n\n  const downloadProcessedFile = () => {\n    if (!processedFileData) return;\n\n    const fileName = `processed_${file.name}`;\n    fileDownload(processedFileData, fileName);\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  return (\n    <Container fluid className=\"p-4\">\n      <Row className=\"justify-content-center\">\n        <Col md={10}>\n          <Card>\n            <Card.Header as=\"h4\" className=\"text-center bg-primary text-white\">HIPAA Document Validator</Card.Header>\n            <Card.Body>\n              <div\n                {...getRootProps()}\n                style={{\n                  border: '2px dashed #007bff',\n                  padding: '40px',\n                  textAlign: 'center',\n                  backgroundColor: '#f8f9fa',\n                  borderRadius: '8px',\n                  marginBottom: '20px'\n                }}\n              >\n                <input {...getInputProps()} />\n                <p><strong>Drag & drop a file here, or click to select</strong></p>\n                <p><small>Supported file types: CSV, TXT, LOG, JSON, PDF, DOC, DOCX</small></p>\n                <Button variant=\"primary\">Upload File</Button>\n              </div>\n\n              {file && (\n                <Alert variant=\"info\">\n                  <strong>File selected:</strong> {file.name} ({(file.size / (1024 * 1024)).toFixed(2)} MB)\n                </Alert>\n              )}\n\n              <Form className=\"mt-4 mb-4\">\n                <Form.Group>\n                  <Form.Label><strong>PHI Handling Method</strong></Form.Label>\n                  <Row>\n                    <Col md={4}>\n                      <Form.Check\n                        type=\"radio\"\n                        id=\"redact\"\n                        label=\"Redact - Replace PHI with [REDACTED]\"\n                        value=\"redact\"\n                        checked={handlingMethod === \"redact\"}\n                        onChange={(e) => setHandlingMethod(e.target.value)}\n                      />\n                    </Col>\n                    <Col md={4}>\n                      <Form.Check\n                        type=\"radio\"\n                        id=\"tokenize\"\n                        label=\"Tokenize - Replace with random tokens\"\n                        value=\"tokenize\"\n                        checked={handlingMethod === \"tokenize\"}\n                        onChange={(e) => setHandlingMethod(e.target.value)}\n                      />\n                    </Col>\n                    <Col md={4}>\n                      <Form.Check\n                        type=\"radio\"\n                        id=\"remove\"\n                        label=\"Remove - Replace with spaces\"\n                        value=\"remove\"\n                        checked={handlingMethod === \"remove\"}\n                        onChange={(e) => setHandlingMethod(e.target.value)}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Group>\n              </Form>\n\n              {alert && (\n                <Alert variant={alert.type} className=\"mt-3\">\n                  {alert.message}\n                </Alert>\n              )}\n\n              {/* File Preview Section */}\n              {fileType && (\n                <Card className=\"mt-4 mb-4\">\n                  <Card.Header as=\"h5\">File Preview</Card.Header>\n                  <Card.Body>\n                    {csvData && (\n                      <div className=\"preview-container\" style={{ maxHeight: '300px', overflowY: 'auto' }}>\n                        <table className=\"table table-bordered table-striped\">\n                          <thead>\n                            <tr>{Object.keys(csvData[0] || {}).map((key) => <th key={key}>{key}</th>)}</tr>\n                          </thead>\n                          <tbody>\n                            {csvData.slice(0, 10).map((row, i) => (\n                              <tr key={i}>{Object.values(row).map((val, j) => <td key={j}>{val}</td>)}</tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    )}\n\n                    {fileContent && (\n                      <pre style={{ background: '#f1f1f1', padding: '1rem', borderRadius: '5px', maxHeight: '300px', overflowY: 'auto' }}>\n                        {fileContent.substring(0, 3000)}\n                        {fileContent.length > 3000 && \"...\"}\n                      </pre>\n                    )}\n\n                    {pdfFile && (\n                      <div className=\"pdf-container\" style={{ textAlign: 'center' }}>\n                        <Document\n                          file={pdfFile}\n                          onLoadSuccess={onDocumentLoadSuccess}\n                          error={<Alert variant=\"danger\">Could not load PDF file</Alert>}\n                          loading={<Spinner animation=\"border\" />}\n                        >\n                          <Page\n                            pageNumber={pageNumber}\n                            scale={1.0}\n                            renderTextLayer={false}\n                            renderAnnotationLayer={false}\n                          />\n                        </Document>\n                        {numPages && (\n                          <div className=\"pdf-controls mt-2\">\n                            <Button\n                              variant=\"outline-secondary\"\n                              size=\"sm\"\n                              disabled={pageNumber <= 1}\n                              onClick={() => setPageNumber(pageNumber - 1)}\n                            >\n                              Previous\n                            </Button>\n                            <span className=\"mx-2\">\n                              Page {pageNumber} of {numPages}\n                            </span>\n                            <Button\n                              variant=\"outline-secondary\"\n                              size=\"sm\"\n                              disabled={pageNumber >= numPages}\n                              onClick={() => setPageNumber(pageNumber + 1)}\n                            >\n                              Next\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    )}\n\n                    {docText && (\n                      <div className=\"doc-preview\">\n                        <pre style={{ background: '#f1f1f1', padding: '1rem', borderRadius: '5px', maxHeight: '300px', overflowY: 'auto' }}>\n                          {docText.substring(0, 3000)}\n                          {docText.length > 3000 && \"...\"}\n                        </pre>\n                      </div>\n                    )}\n\n                    {['doc'].includes(fileType) && !docText && (\n                      <Alert variant=\"info\">\n                        Preview not available for .doc files, but the document can be processed for PHI detection.\n                      </Alert>\n                    )}\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button\n                      variant=\"primary\"\n                      block\n                      onClick={handleScan}\n                      disabled={processing}\n                    >\n                      {processing ?\n                        <>\n                          <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                          <span className=\"ml-2\">Processing...</span>\n                        </> :\n                        'Scan for PHI Violations'\n                      }\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              )}\n\n              {/* Results Section */}\n              {(scanResults || (processedFileData && processedFileType)) && (\n                <Card className=\"mt-4\">\n                  <Card.Header as=\"h5\">Processed Document</Card.Header>\n                  <Card.Body>\n                    {scanResults && (\n                      <pre style={{ background: '#f1f1f1', padding: '1rem', borderRadius: '5px', maxHeight: '300px', overflowY: 'auto' }}>\n                        {scanResults.substring(0, 3000)}\n                        {scanResults.length > 3000 && \"...\"}\n                      </pre>\n                    )}\n\n                    {processedFileData && processedFileType === 'pdf' && !scanResults && (\n                      <div className=\"pdf-container\" style={{ textAlign: 'center' }}>\n                        <Document\n                          file={pdfFile}\n                          onLoadSuccess={onDocumentLoadSuccess}\n                          error={<Alert variant=\"danger\">Could not load processed PDF</Alert>}\n                          loading={<Spinner animation=\"border\" />}\n                        >\n                          <Page\n                            pageNumber={pageNumber}\n                            scale={1.0}\n                            renderTextLayer={false}\n                            renderAnnotationLayer={false}\n                          />\n                        </Document>\n                        {numPages && (\n                          <div className=\"pdf-controls mt-2\">\n                            <Button\n                              variant=\"outline-secondary\"\n                              size=\"sm\"\n                              disabled={pageNumber <= 1}\n                              onClick={() => setPageNumber(pageNumber - 1)}\n                            >\n                              Previous\n                            </Button>\n                            <span className=\"mx-2\">\n                              Page {pageNumber} of {numPages}\n                            </span>\n                            <Button\n                              variant=\"outline-secondary\"\n                              size=\"sm\"\n                              disabled={pageNumber >= numPages}\n                              onClick={() => setPageNumber(pageNumber + 1)}\n                            >\n                              Next\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    )}\n\n                    {processedFileData && ['doc', 'docx'].includes(processedFileType) && !scanResults && (\n                      <Alert variant=\"info\">\n                        Word document processing complete. Please download to view.\n                      </Alert>\n                    )}\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button\n                      variant=\"success\"\n                      onClick={downloadProcessedFile}\n                      disabled={!processedFileData}\n                    >\n                      Download Processed Document\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}